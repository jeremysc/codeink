- List fixes
  - Detaching sublists
  - Not dwelling and dragging laterally
  
AM:
- Record tutorials again
- User studies:
  - Tutorial video: better audio
    - accessing values vs making copies
    - emphasizing playback, clickability of steps

  - Eliciting questions about the language, not just the tool
    3 levels: Tool, language, whole idea

- Graphs: marking nodes
- Fill anything
- Binary port

========
GRAPH ALGORITHMS:
- Graphs
  x Edges: drop onto node, set weight, drag end
  x Drag nodes out, drop as number
  x Drag edge weights out, drop as number
- Dijkstra
  - Build graph with node costs inf, edge weights X
  - Dist source 0
  - For each neighbor in source:
    - Calculate cost:
      - Drag source node cost out (new number)
      - Drag edge weight in (compare, dwell, add)
    - Compare cost with neighbor's cost
      - Update if necessary
    - Mark source as visited

  - Repeat for node, unvisited with smallest cost

- DFS
  - Drag a cursor around
  - Mark nodes as visited as you go

- BFS
  - Drag a cursor around
  - Mark a frontier with a certain color
  - Mark visited as you go

=========
WRITING NOTES:
What vs. how
Bridging the semantic gap via program synthesis 
Learning control flow structure from examples

Juho pointer
Bret Victor

New things:
- List expanding
- Comparison and follow vocabulary
- Dwell feedback
- Delete falloff on the edges / in a corner
- Undo

NICE TO HAVE:
- Binary port
  x Double click: change value
  x Drag (no parent): move subtree
  - Drag (parent): make a copy of just the node, with value
  - Dwell and drag: detach and move subtree
  - Node disappearing when following or comparing
  - Layout

- Hide steps
  - Nodes on side and scrubber
  - Active step

- Cursor leaving canvas
- Binary feedback on insert - arrow
- Empty list: affordance for dragging things in

